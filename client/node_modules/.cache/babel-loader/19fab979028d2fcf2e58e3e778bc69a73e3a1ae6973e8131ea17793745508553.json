{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\albio\\\\OneDrive\\\\Desktop\\\\vercel-fullstack\\\\client\\\\src\\\\Dashboards\\\\Dashboard\\\\BalanceDonut\\\\BalanceDonut.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { jwtDecode } from 'jwt-decode';\nimport axios from 'axios';\nimport './BalanceDonut.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BalanceDonut = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [totalBalance, setTotalBalance] = useState(0);\n  const [userId, setUserId] = useState(null);\n  const [exchangeRates, setExchangeRates] = useState({});\n\n  // ✅ Extract userId from token & fetch balances on load\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token') || sessionStorage.getItem('token');\n    if (!storedToken) {\n      console.error(\"🚨 No token found! Login again.\");\n      return;\n    }\n    try {\n      const decodedToken = jwtDecode(storedToken);\n      setUserId(decodedToken.id);\n      fetchBalances(decodedToken.id);\n      fetchExchangeRates();\n    } catch (error) {\n      console.error('❌ Error decoding token:', error);\n    }\n  }, []);\n\n  // ✅ Fetch balances & prices every 10 seconds\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (userId) {\n        fetchBalances(userId);\n        fetchExchangeRates();\n      }\n    }, 10000);\n    return () => clearInterval(interval);\n  }, [userId]);\n\n  // ✅ Fetch user balances\n  const fetchBalances = async id => {\n    try {\n      const token = localStorage.getItem('token') || sessionStorage.getItem('token');\n      if (!token) {\n        console.error(\"🚨 No token found! Login again.\");\n        return;\n      }\n      const headers = {\n        Authorization: `Bearer ${token}`\n      };\n      const response = await axios.get(`http://localhost:3001/api/users/${id}`, {\n        headers\n      });\n      console.log(\"✅ Updated Balance Data:\", response.data);\n\n      // ✅ Convert balances into chart data format\n      const formattedData = Object.keys(response.data).filter(key => key !== \"total\").map(coin => ({\n        name: coin.toUpperCase(),\n        amount: parseFloat(response.data[coin]) || 0\n      }));\n      setData(formattedData);\n    } catch (error) {\n      var _error$response;\n      console.error('❌ Error fetching balances:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    }\n  };\n\n  // ✅ Fetch real-time exchange rates\n  const fetchExchangeRates = async () => {\n    try {\n      const response = await axios.get('https://api.coinbase.com/v2/exchange-rates?currency=USD');\n      setExchangeRates(response.data.data.rates);\n      console.log(\"✅ Live Exchange Rates:\", response.data.data.rates);\n    } catch (error) {\n      console.error(\"❌ Error fetching exchange rates:\", error.message);\n    }\n  };\n\n  // ✅ Calculate total USD value using live prices\n  useEffect(() => {\n    if (data.length > 0 && Object.keys(exchangeRates).length > 0) {\n      let totalValue = 0;\n      data.forEach(coin => {\n        const coinPrice = exchangeRates[coin.name] ? parseFloat(exchangeRates[coin.name]) : 0;\n        totalValue += coin.amount * coinPrice;\n      });\n      setTotalBalance(totalValue.toFixed(2));\n    }\n  }, [data, exchangeRates]);\n\n  // ✅ Ensure total balance is not zero before calculating %\n  const formattedChartData = data.map(coin => {\n    const coinPrice = exchangeRates[coin.name] ? parseFloat(exchangeRates[coin.name]) : 0;\n    return {\n      name: coin.name,\n      amount: coin.amount,\n      usdValue: coin.amount * coinPrice\n    };\n  });\n  const totalUSD = formattedChartData.reduce((acc, coin) => acc + coin.usdValue, 0);\n  const chartData = {\n    labels: formattedChartData.map(coin => `${coin.name} (${coin.amount})`),\n    datasets: [{\n      data: formattedChartData.map(coin => totalUSD > 0 ? coin.usdValue / totalUSD * 100 : 0),\n      // ✅ Ensure correct % calculation\n      backgroundColor: ['#F7931A', '#627EEA', '#00A98F', '#FF4500', '#2A9D8F', '#E63946', '#6A0572', '#F4A261', '#264653'],\n      borderWidth: 3,\n      hoverOffset: 7\n    }]\n  };\n  const chartOptions = {\n    plugins: {\n      legend: {\n        display: false // ✅ Hide the legend to remove values under the chart\n      },\n      tooltip: {\n        callbacks: {\n          label: function (tooltipItem) {\n            const coin = formattedChartData[tooltipItem.dataIndex];\n            return `${coin.name}: $${coin.usdValue.toFixed(2)} (${tooltipItem.raw.toFixed(1)}%)`;\n          }\n        }\n      }\n    },\n    cutout: '60%' // ✅ Increase inner circle size to restore original chart size\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"balance-donut-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"balance-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Total Balance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"crypto-amount\",\n        children: formattedChartData.map(coin => `${coin.amount} ${coin.name}`).join(', ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"usd-amount\",\n        children: [\"$\", totalBalance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"donut-chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Doughnut, {\n        data: chartData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(BalanceDonut, \"MNn7lDRPTEuBg+noDH28Wxdml2w=\");\n_c = BalanceDonut;\nexport default BalanceDonut;\nvar _c;\n$RefreshReg$(_c, \"BalanceDonut\");","map":{"version":3,"names":["React","useEffect","useState","Doughnut","jwtDecode","axios","jsxDEV","_jsxDEV","BalanceDonut","_s","data","setData","totalBalance","setTotalBalance","userId","setUserId","exchangeRates","setExchangeRates","storedToken","localStorage","getItem","sessionStorage","console","error","decodedToken","id","fetchBalances","fetchExchangeRates","interval","setInterval","clearInterval","token","headers","Authorization","response","get","log","formattedData","Object","keys","filter","key","map","coin","name","toUpperCase","amount","parseFloat","_error$response","message","rates","length","totalValue","forEach","coinPrice","toFixed","formattedChartData","usdValue","totalUSD","reduce","acc","chartData","labels","datasets","backgroundColor","borderWidth","hoverOffset","chartOptions","plugins","legend","display","tooltip","callbacks","label","tooltipItem","dataIndex","raw","cutout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","join","options","_c","$RefreshReg$"],"sources":["C:/Users/albio/OneDrive/Desktop/vercel-fullstack/client/src/Dashboards/Dashboard/BalanceDonut/BalanceDonut.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport axios from 'axios';\r\nimport './BalanceDonut.scss';\r\n\r\nconst BalanceDonut = () => {\r\n  const [data, setData] = useState([]);\r\n  const [totalBalance, setTotalBalance] = useState(0);\r\n  const [userId, setUserId] = useState(null);\r\n  const [exchangeRates, setExchangeRates] = useState({});\r\n\r\n  // ✅ Extract userId from token & fetch balances on load\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem('token') || sessionStorage.getItem('token');\r\n\r\n    if (!storedToken) {\r\n      console.error(\"🚨 No token found! Login again.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const decodedToken = jwtDecode(storedToken);\r\n      setUserId(decodedToken.id);\r\n      fetchBalances(decodedToken.id);\r\n      fetchExchangeRates();\r\n    } catch (error) {\r\n      console.error('❌ Error decoding token:', error);\r\n    }\r\n  }, []);\r\n\r\n  // ✅ Fetch balances & prices every 10 seconds\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (userId) {\r\n        fetchBalances(userId);\r\n        fetchExchangeRates();\r\n      }\r\n    }, 10000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [userId]);\r\n\r\n  // ✅ Fetch user balances\r\n  const fetchBalances = async (id) => {\r\n    try {\r\n      const token = localStorage.getItem('token') || sessionStorage.getItem('token');\r\n      if (!token) {\r\n        console.error(\"🚨 No token found! Login again.\");\r\n        return;\r\n      }\r\n\r\n      const headers = { Authorization: `Bearer ${token}` };\r\n      const response = await axios.get(`http://localhost:3001/api/users/${id}`, { headers });\r\n\r\n      console.log(\"✅ Updated Balance Data:\", response.data);\r\n\r\n      // ✅ Convert balances into chart data format\r\n      const formattedData = Object.keys(response.data)\r\n        .filter((key) => key !== \"total\")\r\n        .map((coin) => ({\r\n          name: coin.toUpperCase(),\r\n          amount: parseFloat(response.data[coin]) || 0,\r\n        }));\r\n\r\n      setData(formattedData);\r\n    } catch (error) {\r\n      console.error('❌ Error fetching balances:', error.response?.data || error.message);\r\n    }\r\n  };\r\n\r\n  // ✅ Fetch real-time exchange rates\r\n  const fetchExchangeRates = async () => {\r\n    try {\r\n      const response = await axios.get('https://api.coinbase.com/v2/exchange-rates?currency=USD');\r\n      setExchangeRates(response.data.data.rates);\r\n      console.log(\"✅ Live Exchange Rates:\", response.data.data.rates);\r\n    } catch (error) {\r\n      console.error(\"❌ Error fetching exchange rates:\", error.message);\r\n    }\r\n  };\r\n\r\n  // ✅ Calculate total USD value using live prices\r\n  useEffect(() => {\r\n    if (data.length > 0 && Object.keys(exchangeRates).length > 0) {\r\n      let totalValue = 0;\r\n      \r\n      data.forEach(coin => {\r\n        const coinPrice = exchangeRates[coin.name] ? parseFloat(exchangeRates[coin.name]) : 0;\r\n        totalValue += coin.amount * coinPrice;\r\n      });\r\n\r\n      setTotalBalance(totalValue.toFixed(2));\r\n    }\r\n  }, [data, exchangeRates]);\r\n\r\n  // ✅ Ensure total balance is not zero before calculating %\r\n  const formattedChartData = data.map(coin => {\r\n    const coinPrice = exchangeRates[coin.name] ? parseFloat(exchangeRates[coin.name]) : 0;\r\n    return {\r\n      name: coin.name,\r\n      amount: coin.amount,\r\n      usdValue: coin.amount * coinPrice,\r\n    };\r\n  });\r\n\r\n  const totalUSD = formattedChartData.reduce((acc, coin) => acc + coin.usdValue, 0);\r\n\r\n  const chartData = {\r\n    labels: formattedChartData.map(coin => `${coin.name} (${coin.amount})`),\r\n    datasets: [\r\n      {\r\n        data: formattedChartData.map(coin => (totalUSD > 0 ? (coin.usdValue / totalUSD) * 100 : 0)), // ✅ Ensure correct % calculation\r\n        backgroundColor: [\r\n          '#F7931A', '#627EEA', '#00A98F', '#FF4500', '#2A9D8F', '#E63946', '#6A0572', '#F4A261', '#264653'\r\n        ],\r\n        borderWidth: 3,\r\n        hoverOffset: 7,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    plugins: {\r\n      legend: {\r\n        display: false, // ✅ Hide the legend to remove values under the chart\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function (tooltipItem) {\r\n            const coin = formattedChartData[tooltipItem.dataIndex];\r\n            return `${coin.name}: $${coin.usdValue.toFixed(2)} (${tooltipItem.raw.toFixed(1)}%)`;\r\n          },\r\n        },\r\n      },\r\n    },\r\n    cutout: '60%', // ✅ Increase inner circle size to restore original chart size\r\n  };\r\n  \r\n  return (\r\n    <div className=\"balance-donut-card\">\r\n      <div className=\"balance-info\">\r\n        <h2>Total Balance</h2>\r\n        <p className=\"crypto-amount\">\r\n          {formattedChartData.map((coin) => `${coin.amount} ${coin.name}`).join(', ')}\r\n        </p>\r\n        <p className=\"usd-amount\">${totalBalance}</p>\r\n      </div>\r\n      <div className=\"donut-chart-container\">\r\n        <Doughnut data={chartData} options={chartOptions} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BalanceDonut;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}