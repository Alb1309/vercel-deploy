{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\albio\\\\OneDrive\\\\Desktop\\\\vercel-fullstack\\\\client\\\\src\\\\components\\\\ProtectedRoute.jsx\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  requiredRole\n}) => {\n  // Get authentication data from storage\n  const user = JSON.parse(localStorage.getItem('user')) || JSON.parse(sessionStorage.getItem('user'));\n  const token = localStorage.getItem('token') || sessionStorage.getItem('token');\n\n  // Debugging logs\n  console.log('ProtectedRoute check - User:', user);\n  console.log('ProtectedRoute check - Token:', token);\n\n  // Check if token exists\n  if (!token || !user) {\n    console.log('Redirecting due to missing token/user');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this); // Changed to /login\n  }\n\n  // Verify token expiration\n  try {\n    const decodedToken = jwtDecode(token);\n    const currentTime = Date.now() / 1000;\n    if (decodedToken.exp < currentTime) {\n      console.log('Redirecting due to expired token');\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n      sessionStorage.removeItem('user');\n      sessionStorage.removeItem('token');\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }, this);\n    }\n  } catch (error) {\n    console.error('Token validation error:', error);\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Debug role check\n  console.log('User role:', user.role, 'Required role:', requiredRole);\n\n  // Check user role\n  if (user.role.toLowerCase() !== requiredRole.toLowerCase()) {\n    // Case-insensitive check\n    console.log('Redirecting due to role mismatch');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jwtDecode","jsxDEV","_jsxDEV","ProtectedRoute","children","requiredRole","user","JSON","parse","localStorage","getItem","sessionStorage","token","console","log","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","decodedToken","currentTime","Date","now","exp","removeItem","error","role","toLowerCase","_c","$RefreshReg$"],"sources":["C:/Users/albio/OneDrive/Desktop/vercel-fullstack/client/src/components/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nconst ProtectedRoute = ({ children, requiredRole }) => {\r\n  // Get authentication data from storage\r\n  const user = JSON.parse(localStorage.getItem('user')) || JSON.parse(sessionStorage.getItem('user'));\r\n  const token = localStorage.getItem('token') || sessionStorage.getItem('token');\r\n\r\n  // Debugging logs\r\n  console.log('ProtectedRoute check - User:', user);\r\n  console.log('ProtectedRoute check - Token:', token);\r\n\r\n  // Check if token exists\r\n  if (!token || !user) {\r\n    console.log('Redirecting due to missing token/user');\r\n    return <Navigate to=\"/\" replace />;  // Changed to /login\r\n  }\r\n\r\n  // Verify token expiration\r\n  try {\r\n    const decodedToken = jwtDecode(token);\r\n    const currentTime = Date.now() / 1000;\r\n\r\n    if (decodedToken.exp < currentTime) {\r\n      console.log('Redirecting due to expired token');\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('token');\r\n      sessionStorage.removeItem('user');\r\n      sessionStorage.removeItem('token');\r\n      return <Navigate to=\"/\" replace />;\r\n    }\r\n  } catch (error) {\r\n    console.error('Token validation error:', error);\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  // Debug role check\r\n  console.log('User role:', user.role, 'Required role:', requiredRole);\r\n  \r\n  // Check user role\r\n  if (user.role.toLowerCase() !== requiredRole.toLowerCase()) {  // Case-insensitive check\r\n    console.log('Redirecting due to role mismatch');\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EACrD;EACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAIH,IAAI,CAACC,KAAK,CAACG,cAAc,CAACD,OAAO,CAAC,MAAM,CAAC,CAAC;EACnG,MAAME,KAAK,GAAGH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAIC,cAAc,CAACD,OAAO,CAAC,OAAO,CAAC;;EAE9E;EACAG,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAER,IAAI,CAAC;EACjDO,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,KAAK,CAAC;;EAEnD;EACA,IAAI,CAACA,KAAK,IAAI,CAACN,IAAI,EAAE;IACnBO,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;IACpD,oBAAOZ,OAAA,CAACH,QAAQ;MAACgB,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC,CAAE;EACvC;;EAEA;EACA,IAAI;IACF,MAAMC,YAAY,GAAGrB,SAAS,CAACY,KAAK,CAAC;IACrC,MAAMU,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;IAErC,IAAIH,YAAY,CAACI,GAAG,GAAGH,WAAW,EAAE;MAClCT,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/CL,YAAY,CAACiB,UAAU,CAAC,MAAM,CAAC;MAC/BjB,YAAY,CAACiB,UAAU,CAAC,OAAO,CAAC;MAChCf,cAAc,CAACe,UAAU,CAAC,MAAM,CAAC;MACjCf,cAAc,CAACe,UAAU,CAAC,OAAO,CAAC;MAClC,oBAAOxB,OAAA,CAACH,QAAQ;QAACgB,EAAE,EAAC,GAAG;QAACC,OAAO;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACpC;EACF,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdd,OAAO,CAACc,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,oBAAOzB,OAAA,CAACH,QAAQ;MAACgB,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;;EAEA;EACAP,OAAO,CAACC,GAAG,CAAC,YAAY,EAAER,IAAI,CAACsB,IAAI,EAAE,gBAAgB,EAAEvB,YAAY,CAAC;;EAEpE;EACA,IAAIC,IAAI,CAACsB,IAAI,CAACC,WAAW,CAAC,CAAC,KAAKxB,YAAY,CAACwB,WAAW,CAAC,CAAC,EAAE;IAAG;IAC7DhB,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IAC/C,oBAAOZ,OAAA,CAACH,QAAQ;MAACgB,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;EAEA,OAAOhB,QAAQ;AACjB,CAAC;AAAC0B,EAAA,GA3CI3B,cAAc;AA6CpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}