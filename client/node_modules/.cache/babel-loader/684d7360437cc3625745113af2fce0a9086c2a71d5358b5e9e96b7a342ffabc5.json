{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\albio\\\\OneDrive\\\\Desktop\\\\vercel-fullstack\\\\client\\\\src\\\\Dashboards\\\\Dashboard\\\\MonthlyGrowth\\\\MonthlyGrowth.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport \"./MonthlyGrowth.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MonthlyGrowth = () => {\n  _s();\n  // ✅ Initial simulated portfolio value (e.g., $10,000)\n  const [seriesData, setSeriesData] = useState([{\n    x: new Date().getTime(),\n    y: [10000, 10100, 9950, 10050]\n  }]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      addNewCandle();\n    }, 0.5 * 60 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const addNewCandle = () => {\n    setSeriesData(prevData => {\n      const lastCandle = prevData[prevData.length - 1];\n      const lastClose = lastCandle.y[3];\n\n      // ✅ Simulate realistic small growth with occasional dips\n      let open = lastClose;\n      let close = open * (1 + (Math.random() * 0.01 - 0.005)); // ±0.5% change\n      let high = Math.max(open, close) * (1 + Math.random() * 0.01); // Up to +1% high\n      let low = Math.min(open, close) * (1 - Math.random() * 0.01); // Down to -1% low\n\n      const newCandle = {\n        x: new Date().getTime(),\n        y: [open, high, low, close]\n      };\n      return [...prevData, newCandle];\n    });\n  };\n  const options = {\n    chart: {\n      type: \"candlestick\",\n      height: 600,\n      background: \"#171F2A\"\n    },\n    title: {\n      text: \"Simulated Portfolio Growth\",\n      align: \"left\",\n      style: {\n        color: \"#fff\"\n      }\n    },\n    xaxis: {\n      type: \"datetime\",\n      labels: {\n        style: {\n          colors: \"#fff\"\n        }\n      }\n    },\n    yaxis: {\n      tooltip: {\n        enabled: true\n      },\n      labels: {\n        style: {\n          colors: \"#fff\"\n        }\n      }\n    },\n    grid: {\n      borderColor: \"#ffffff\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"monthly-growth\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n        options: options,\n        series: [{\n          data: seriesData\n        }],\n        type: \"candlestick\",\n        height: 400\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(MonthlyGrowth, \"vrHIFok5SwthnbTglE3j8tVgsYc=\");\n_c = MonthlyGrowth;\nexport default MonthlyGrowth;\nvar _c;\n$RefreshReg$(_c, \"MonthlyGrowth\");","map":{"version":3,"names":["React","useEffect","useState","ReactApexChart","jsxDEV","_jsxDEV","MonthlyGrowth","_s","seriesData","setSeriesData","x","Date","getTime","y","interval","setInterval","addNewCandle","clearInterval","prevData","lastCandle","length","lastClose","open","close","Math","random","high","max","low","min","newCandle","options","chart","type","height","background","title","text","align","style","color","xaxis","labels","colors","yaxis","tooltip","enabled","grid","borderColor","className","children","series","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/albio/OneDrive/Desktop/vercel-fullstack/client/src/Dashboards/Dashboard/MonthlyGrowth/MonthlyGrowth.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport \"./MonthlyGrowth.scss\";\r\n\r\nconst MonthlyGrowth = () => {\r\n  // ✅ Initial simulated portfolio value (e.g., $10,000)\r\n  const [seriesData, setSeriesData] = useState([\r\n    { x: new Date().getTime(), y: [10000, 10100, 9950, 10050] }\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      addNewCandle();\r\n    }, 0.5 * 60 * 60 * 1000); \r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const addNewCandle = () => {\r\n    setSeriesData((prevData) => {\r\n      const lastCandle = prevData[prevData.length - 1];\r\n      const lastClose = lastCandle.y[3];\r\n\r\n      // ✅ Simulate realistic small growth with occasional dips\r\n      let open = lastClose;\r\n      let close = open * (1 + (Math.random() * 0.01 - 0.005)); // ±0.5% change\r\n      let high = Math.max(open, close) * (1 + Math.random() * 0.01); // Up to +1% high\r\n      let low = Math.min(open, close) * (1 - Math.random() * 0.01); // Down to -1% low\r\n\r\n      const newCandle = {\r\n        x: new Date().getTime(),\r\n        y: [open, high, low, close]\r\n      };\r\n\r\n      return [...prevData, newCandle];\r\n    });\r\n  };\r\n\r\n  const options = {\r\n    chart: {\r\n      type: \"candlestick\",\r\n      height: 600,\r\n      background: \"#171F2A\",\r\n    },\r\n    title: {\r\n      text: \"Simulated Portfolio Growth\",\r\n      align: \"left\",\r\n      style: { color: \"#fff\" },\r\n    },\r\n    xaxis: {\r\n      type: \"datetime\",\r\n      labels: { style: { colors: \"#fff\" } },\r\n    },\r\n    yaxis: {\r\n      tooltip: { enabled: true },\r\n      labels: { style: { colors: \"#fff\" } },\r\n    },\r\n    grid: {\r\n      borderColor: \"#ffffff\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"monthly-growth\">\r\n      <div className=\"chart-container\">\r\n        <ReactApexChart options={options} series={[{ data: seriesData }]} type=\"candlestick\" height={400} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthlyGrowth;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}