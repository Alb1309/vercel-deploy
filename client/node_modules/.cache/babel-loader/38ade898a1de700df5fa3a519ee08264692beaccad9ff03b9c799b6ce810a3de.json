{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\albio\\\\OneDrive\\\\Desktop\\\\vercel-fullstack\\\\client\\\\src\\\\Dashboards\\\\Dashboard\\\\TradeCard\\\\TradeCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nimport './TradeCard.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TradeCard = () => {\n  _s();\n  const [userId, setUserId] = useState(null);\n  const [balances, setBalances] = useState({});\n  const [exchangeRates, setExchangeRates] = useState({});\n  const [fromCurrency, setFromCurrency] = useState(\"\");\n  const [toCurrency, setToCurrency] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [conversionRate, setConversionRate] = useState(1);\n  const [convertedAmount, setConvertedAmount] = useState(0);\n\n  // 🔥 Automatically load the user from token\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token') || sessionStorage.getItem('token');\n    if (storedToken) {\n      try {\n        const decoded = jwtDecode(storedToken);\n        setUserId(decoded.id);\n        fetchBalances(decoded.id);\n      } catch (error) {\n        console.error(\"❌ Error decoding token:\", error);\n      }\n    } else {\n      console.error(\"🚨 No token found! Login again.\");\n    }\n  }, []);\n  useEffect(() => {\n    fetchExchangeRates();\n  }, []);\n  useEffect(() => {\n    if (exchangeRates[fromCurrency] && exchangeRates[toCurrency]) {\n      const rate = exchangeRates[toCurrency] / exchangeRates[fromCurrency];\n      setConversionRate(rate);\n      setConvertedAmount(amount * rate);\n    }\n  }, [fromCurrency, toCurrency, amount, exchangeRates]);\n\n  // ✅ Automatically fetch balances every 10 seconds to keep data fresh\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (userId) fetchBalances(userId);\n    }, 10000); // Refresh every 10 seconds\n\n    return () => clearInterval(interval); // Cleanup interval\n  }, [userId]);\n  const fetchBalances = async id => {\n    try {\n      const token = localStorage.getItem('token') || sessionStorage.getItem('token');\n      if (!token) {\n        console.error(\"🚨 No token found! Login again.\");\n        return;\n      }\n      const headers = {\n        Authorization: `Bearer ${token}`\n      };\n      const response = await axios.get(`http://localhost:3001/api/users/${id}`, {\n        headers\n      });\n\n      // Remove 'total' from balance list\n      const filteredBalances = Object.fromEntries(Object.entries(response.data).filter(([key]) => key !== \"total\"));\n      setBalances(filteredBalances);\n\n      // ✅ Ensure different default selections\n      const balanceKeys = Object.keys(filteredBalances);\n      if (balanceKeys.length >= 2) {\n        setFromCurrency(balanceKeys[0]); // First currency\n        setToCurrency(balanceKeys[1]); // Second currency\n      }\n    } catch (error) {\n      var _error$response;\n      console.error(\"❌ Error fetching balances:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    }\n  };\n  const fetchExchangeRates = async () => {\n    try {\n      const response = await axios.get('https://api.coinbase.com/v2/exchange-rates?currency=USD');\n      setExchangeRates(response.data.data.rates);\n    } catch (error) {\n      console.error(\"❌ Error fetching exchange rates:\", error.message);\n    }\n  };\n  const handleTrade = async () => {\n    if (!amount || amount <= 0) {\n      alert(\"Enter a valid amount to trade.\");\n      return;\n    }\n    if (balances[fromCurrency] < amount) {\n      alert(`You don't have enough ${fromCurrency} to trade.`);\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token') || sessionStorage.getItem('token');\n      const headers = {\n        Authorization: `Bearer ${token}`\n      };\n      const response = await axios.put('http://localhost:3001/api/trade', {\n        userId,\n        fromCurrency,\n        toCurrency,\n        amount,\n        conversionRate\n      }, {\n        headers\n      });\n      alert(response.data.message);\n      fetchBalances(userId); // Refresh balances after trade\n    } catch (error) {\n      var _error$response2, _error$response3, _error$response3$data;\n      console.error(\"❌ Trade error:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      alert(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || \"Trade failed.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trade-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"trade-card-title\",\n      children: \"Crypto Trading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trade-card-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"From:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: fromCurrency,\n        onChange: e => setFromCurrency(e.target.value),\n        children: Object.keys(balances).map(currency => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: currency,\n          children: currency\n        }, currency, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: amount,\n        onChange: e => setAmount(parseFloat(e.target.value) || 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trade-card-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"To:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: toCurrency,\n        onChange: e => {\n          setToCurrency(e.target.value);\n          // ✅ Ensure conversion updates immediately\n          const rate = exchangeRates[e.target.value] / exchangeRates[fromCurrency];\n          setConversionRate(rate);\n          setConvertedAmount(amount * rate);\n        },\n        children: Object.keys(balances).map(currency => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: currency,\n          children: currency\n        }, currency, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: convertedAmount.toFixed(6),\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Rate: 1 \", fromCurrency, \" = \", conversionRate.toFixed(6), \" \", toCurrency]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"trade-button\",\n      onClick: handleTrade,\n      children: \"Trade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n_s(TradeCard, \"jHqgIIgeOAy2ITrJfDalIyn7zNI=\");\n_c = TradeCard;\nexport default TradeCard;\nvar _c;\n$RefreshReg$(_c, \"TradeCard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jwtDecode","jsxDEV","_jsxDEV","TradeCard","_s","userId","setUserId","balances","setBalances","exchangeRates","setExchangeRates","fromCurrency","setFromCurrency","toCurrency","setToCurrency","amount","setAmount","conversionRate","setConversionRate","convertedAmount","setConvertedAmount","storedToken","localStorage","getItem","sessionStorage","decoded","id","fetchBalances","error","console","fetchExchangeRates","rate","interval","setInterval","clearInterval","token","headers","Authorization","response","get","filteredBalances","Object","fromEntries","entries","data","filter","key","balanceKeys","keys","length","_error$response","message","rates","handleTrade","alert","put","_error$response2","_error$response3","_error$response3$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","currency","type","parseFloat","toFixed","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/albio/OneDrive/Desktop/vercel-fullstack/client/src/Dashboards/Dashboard/TradeCard/TradeCard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport './TradeCard.scss';\r\n\r\nconst TradeCard = () => {\r\n    const [userId, setUserId] = useState(null);\r\n    const [balances, setBalances] = useState({});\r\n    const [exchangeRates, setExchangeRates] = useState({});\r\n    const [fromCurrency, setFromCurrency] = useState(\"\");\r\n    const [toCurrency, setToCurrency] = useState(\"\");\r\n    const [amount, setAmount] = useState(0);\r\n    const [conversionRate, setConversionRate] = useState(1);\r\n    const [convertedAmount, setConvertedAmount] = useState(0);\r\n\r\n    // 🔥 Automatically load the user from token\r\n    useEffect(() => {\r\n        const storedToken = localStorage.getItem('token') || sessionStorage.getItem('token');\r\n        if (storedToken) {\r\n            try {\r\n                const decoded = jwtDecode(storedToken);\r\n                setUserId(decoded.id);\r\n                fetchBalances(decoded.id);\r\n            } catch (error) {\r\n                console.error(\"❌ Error decoding token:\", error);\r\n            }\r\n        } else {\r\n            console.error(\"🚨 No token found! Login again.\");\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchExchangeRates();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (exchangeRates[fromCurrency] && exchangeRates[toCurrency]) {\r\n            const rate = exchangeRates[toCurrency] / exchangeRates[fromCurrency];\r\n            setConversionRate(rate);\r\n            setConvertedAmount(amount * rate);\r\n        }\r\n    }, [fromCurrency, toCurrency, amount, exchangeRates]);\r\n\r\n    // ✅ Automatically fetch balances every 10 seconds to keep data fresh\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (userId) fetchBalances(userId);\r\n        }, 10000); // Refresh every 10 seconds\r\n\r\n        return () => clearInterval(interval); // Cleanup interval\r\n    }, [userId]);\r\n\r\n    const fetchBalances = async (id) => {\r\n        try {\r\n            const token = localStorage.getItem('token') || sessionStorage.getItem('token');\r\n            if (!token) {\r\n                console.error(\"🚨 No token found! Login again.\");\r\n                return;\r\n            }\r\n\r\n            const headers = { Authorization: `Bearer ${token}` };\r\n            const response = await axios.get(`http://localhost:3001/api/users/${id}`, { headers });\r\n\r\n            // Remove 'total' from balance list\r\n            const filteredBalances = Object.fromEntries(\r\n                Object.entries(response.data).filter(([key]) => key !== \"total\")\r\n            );\r\n\r\n            setBalances(filteredBalances);\r\n\r\n            // ✅ Ensure different default selections\r\n            const balanceKeys = Object.keys(filteredBalances);\r\n            if (balanceKeys.length >= 2) {\r\n                setFromCurrency(balanceKeys[0]); // First currency\r\n                setToCurrency(balanceKeys[1]); // Second currency\r\n            }\r\n        } catch (error) {\r\n            console.error(\"❌ Error fetching balances:\", error.response?.data || error.message);\r\n        }\r\n    };\r\n\r\n    const fetchExchangeRates = async () => {\r\n        try {\r\n            const response = await axios.get('https://api.coinbase.com/v2/exchange-rates?currency=USD');\r\n            setExchangeRates(response.data.data.rates);\r\n        } catch (error) {\r\n            console.error(\"❌ Error fetching exchange rates:\", error.message);\r\n        }\r\n    };\r\n\r\n    const handleTrade = async () => {\r\n        if (!amount || amount <= 0) {\r\n            alert(\"Enter a valid amount to trade.\");\r\n            return;\r\n        }\r\n        if (balances[fromCurrency] < amount) {\r\n            alert(`You don't have enough ${fromCurrency} to trade.`);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const token = localStorage.getItem('token') || sessionStorage.getItem('token');\r\n            const headers = { Authorization: `Bearer ${token}` };\r\n\r\n            const response = await axios.put('http://localhost:3001/api/trade', {\r\n                userId,\r\n                fromCurrency,\r\n                toCurrency,\r\n                amount,\r\n                conversionRate\r\n            }, { headers });\r\n\r\n            alert(response.data.message);\r\n            fetchBalances(userId); // Refresh balances after trade\r\n        } catch (error) {\r\n            console.error(\"❌ Trade error:\", error.response?.data || error.message);\r\n            alert(error.response?.data?.error || \"Trade failed.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"trade-card\">\r\n            <h2 className=\"trade-card-title\">Crypto Trading</h2>\r\n\r\n            <div className=\"trade-card-row\">\r\n                <label>From:</label>\r\n                <select value={fromCurrency} onChange={(e) => setFromCurrency(e.target.value)}>\r\n                    {Object.keys(balances).map((currency) => (\r\n                        <option key={currency} value={currency}>{currency}</option>\r\n                    ))}\r\n                </select>\r\n                <input type=\"number\" value={amount} onChange={(e) => setAmount(parseFloat(e.target.value) || 0)} />\r\n            </div>\r\n\r\n            <div className=\"trade-card-row\">\r\n                <label>To:</label>\r\n                <select \r\n                    value={toCurrency} \r\n                    onChange={(e) => {\r\n                        setToCurrency(e.target.value);\r\n                        // ✅ Ensure conversion updates immediately\r\n                        const rate = exchangeRates[e.target.value] / exchangeRates[fromCurrency];\r\n                        setConversionRate(rate);\r\n                        setConvertedAmount(amount * rate);\r\n                    }}\r\n                >\r\n                    {Object.keys(balances).map((currency) => (\r\n                        <option key={currency} value={currency}>{currency}</option>\r\n                    ))}\r\n                </select>\r\n                <input type=\"text\" value={convertedAmount.toFixed(6)} disabled />\r\n            </div>\r\n\r\n            <p>Rate: 1 {fromCurrency} = {conversionRate.toFixed(6)} {toCurrency}</p>\r\n\r\n            <button className=\"trade-button\" onClick={handleTrade}>Trade</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TradeCard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACmB,cAAc,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACqB,eAAe,EAAEC,kBAAkB,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;;EAEzD;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMwB,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAIC,cAAc,CAACD,OAAO,CAAC,OAAO,CAAC;IACpF,IAAIF,WAAW,EAAE;MACb,IAAI;QACA,MAAMI,OAAO,GAAGzB,SAAS,CAACqB,WAAW,CAAC;QACtCf,SAAS,CAACmB,OAAO,CAACC,EAAE,CAAC;QACrBC,aAAa,CAACF,OAAO,CAACC,EAAE,CAAC;MAC7B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD;IACJ,CAAC,MAAM;MACHC,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAC;IACpD;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN/B,SAAS,CAAC,MAAM;IACZiC,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAENjC,SAAS,CAAC,MAAM;IACZ,IAAIY,aAAa,CAACE,YAAY,CAAC,IAAIF,aAAa,CAACI,UAAU,CAAC,EAAE;MAC1D,MAAMkB,IAAI,GAAGtB,aAAa,CAACI,UAAU,CAAC,GAAGJ,aAAa,CAACE,YAAY,CAAC;MACpEO,iBAAiB,CAACa,IAAI,CAAC;MACvBX,kBAAkB,CAACL,MAAM,GAAGgB,IAAI,CAAC;IACrC;EACJ,CAAC,EAAE,CAACpB,YAAY,EAAEE,UAAU,EAAEE,MAAM,EAAEN,aAAa,CAAC,CAAC;;EAErD;EACAZ,SAAS,CAAC,MAAM;IACZ,MAAMmC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/B,IAAI5B,MAAM,EAAEsB,aAAa,CAACtB,MAAM,CAAC;IACrC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;;IAEX,OAAO,MAAM6B,aAAa,CAACF,QAAQ,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,CAAC3B,MAAM,CAAC,CAAC;EAEZ,MAAMsB,aAAa,GAAG,MAAOD,EAAE,IAAK;IAChC,IAAI;MACA,MAAMS,KAAK,GAAGb,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAIC,cAAc,CAACD,OAAO,CAAC,OAAO,CAAC;MAC9E,IAAI,CAACY,KAAK,EAAE;QACRN,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAC;QAChD;MACJ;MAEA,MAAMQ,OAAO,GAAG;QAAEC,aAAa,EAAE,UAAUF,KAAK;MAAG,CAAC;MACpD,MAAMG,QAAQ,GAAG,MAAMvC,KAAK,CAACwC,GAAG,CAAC,mCAAmCb,EAAE,EAAE,EAAE;QAAEU;MAAQ,CAAC,CAAC;;MAEtF;MACA,MAAMI,gBAAgB,GAAGC,MAAM,CAACC,WAAW,CACvCD,MAAM,CAACE,OAAO,CAACL,QAAQ,CAACM,IAAI,CAAC,CAACC,MAAM,CAAC,CAAC,CAACC,GAAG,CAAC,KAAKA,GAAG,KAAK,OAAO,CACnE,CAAC;MAEDtC,WAAW,CAACgC,gBAAgB,CAAC;;MAE7B;MACA,MAAMO,WAAW,GAAGN,MAAM,CAACO,IAAI,CAACR,gBAAgB,CAAC;MACjD,IAAIO,WAAW,CAACE,MAAM,IAAI,CAAC,EAAE;QACzBrC,eAAe,CAACmC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjCjC,aAAa,CAACiC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnC;IACJ,CAAC,CAAC,OAAOnB,KAAK,EAAE;MAAA,IAAAsB,eAAA;MACZrB,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAE,EAAAsB,eAAA,GAAAtB,KAAK,CAACU,QAAQ,cAAAY,eAAA,uBAAdA,eAAA,CAAgBN,IAAI,KAAIhB,KAAK,CAACuB,OAAO,CAAC;IACtF;EACJ,CAAC;EAED,MAAMrB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACA,MAAMQ,QAAQ,GAAG,MAAMvC,KAAK,CAACwC,GAAG,CAAC,yDAAyD,CAAC;MAC3F7B,gBAAgB,CAAC4B,QAAQ,CAACM,IAAI,CAACA,IAAI,CAACQ,KAAK,CAAC;IAC9C,CAAC,CAAC,OAAOxB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAACuB,OAAO,CAAC;IACpE;EACJ,CAAC;EAED,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI,CAACtC,MAAM,IAAIA,MAAM,IAAI,CAAC,EAAE;MACxBuC,KAAK,CAAC,gCAAgC,CAAC;MACvC;IACJ;IACA,IAAI/C,QAAQ,CAACI,YAAY,CAAC,GAAGI,MAAM,EAAE;MACjCuC,KAAK,CAAC,yBAAyB3C,YAAY,YAAY,CAAC;MACxD;IACJ;IAEA,IAAI;MACA,MAAMwB,KAAK,GAAGb,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAIC,cAAc,CAACD,OAAO,CAAC,OAAO,CAAC;MAC9E,MAAMa,OAAO,GAAG;QAAEC,aAAa,EAAE,UAAUF,KAAK;MAAG,CAAC;MAEpD,MAAMG,QAAQ,GAAG,MAAMvC,KAAK,CAACwD,GAAG,CAAC,iCAAiC,EAAE;QAChElD,MAAM;QACNM,YAAY;QACZE,UAAU;QACVE,MAAM;QACNE;MACJ,CAAC,EAAE;QAAEmB;MAAQ,CAAC,CAAC;MAEfkB,KAAK,CAAChB,QAAQ,CAACM,IAAI,CAACO,OAAO,CAAC;MAC5BxB,aAAa,CAACtB,MAAM,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,OAAOuB,KAAK,EAAE;MAAA,IAAA4B,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACZ7B,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAE,EAAA4B,gBAAA,GAAA5B,KAAK,CAACU,QAAQ,cAAAkB,gBAAA,uBAAdA,gBAAA,CAAgBZ,IAAI,KAAIhB,KAAK,CAACuB,OAAO,CAAC;MACtEG,KAAK,CAAC,EAAAG,gBAAA,GAAA7B,KAAK,CAACU,QAAQ,cAAAmB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBb,IAAI,cAAAc,qBAAA,uBAApBA,qBAAA,CAAsB9B,KAAK,KAAI,eAAe,CAAC;IACzD;EACJ,CAAC;EAED,oBACI1B,OAAA;IAAKyD,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvB1D,OAAA;MAAIyD,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEpD9D,OAAA;MAAKyD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3B1D,OAAA;QAAA0D,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpB9D,OAAA;QAAQ+D,KAAK,EAAEtD,YAAa;QAACuD,QAAQ,EAAGC,CAAC,IAAKvD,eAAe,CAACuD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAL,QAAA,EACzEnB,MAAM,CAACO,IAAI,CAACzC,QAAQ,CAAC,CAAC8D,GAAG,CAAEC,QAAQ,iBAChCpE,OAAA;UAAuB+D,KAAK,EAAEK,QAAS;UAAAV,QAAA,EAAEU;QAAQ,GAApCA,QAAQ;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqC,CAC7D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACT9D,OAAA;QAAOqE,IAAI,EAAC,QAAQ;QAACN,KAAK,EAAElD,MAAO;QAACmD,QAAQ,EAAGC,CAAC,IAAKnD,SAAS,CAACwD,UAAU,CAACL,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,IAAI,CAAC;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClG,CAAC,eAEN9D,OAAA;MAAKyD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3B1D,OAAA;QAAA0D,QAAA,EAAO;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClB9D,OAAA;QACI+D,KAAK,EAAEpD,UAAW;QAClBqD,QAAQ,EAAGC,CAAC,IAAK;UACbrD,aAAa,CAACqD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;UAC7B;UACA,MAAMlC,IAAI,GAAGtB,aAAa,CAAC0D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,GAAGxD,aAAa,CAACE,YAAY,CAAC;UACxEO,iBAAiB,CAACa,IAAI,CAAC;UACvBX,kBAAkB,CAACL,MAAM,GAAGgB,IAAI,CAAC;QACrC,CAAE;QAAA6B,QAAA,EAEDnB,MAAM,CAACO,IAAI,CAACzC,QAAQ,CAAC,CAAC8D,GAAG,CAAEC,QAAQ,iBAChCpE,OAAA;UAAuB+D,KAAK,EAAEK,QAAS;UAAAV,QAAA,EAAEU;QAAQ,GAApCA,QAAQ;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqC,CAC7D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACT9D,OAAA;QAAOqE,IAAI,EAAC,MAAM;QAACN,KAAK,EAAE9C,eAAe,CAACsD,OAAO,CAAC,CAAC,CAAE;QAACC,QAAQ;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC,eAEN9D,OAAA;MAAA0D,QAAA,GAAG,UAAQ,EAACjD,YAAY,EAAC,KAAG,EAACM,cAAc,CAACwD,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC,EAAC5D,UAAU;IAAA;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAExE9D,OAAA;MAAQyD,SAAS,EAAC,cAAc;MAACgB,OAAO,EAAEtB,WAAY;MAAAO,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEd,CAAC;AAAC5D,EAAA,CAzJID,SAAS;AAAAyE,EAAA,GAATzE,SAAS;AA2Jf,eAAeA,SAAS;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}